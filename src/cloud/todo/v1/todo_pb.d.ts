// @generated by protoc-gen-es v1.8.0
// @generated from file todo/v1/todo.proto (package cloud.fullstack.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Message representing a task in the task management application
 *
 * @generated from message cloud.fullstack.v1.Task
 */
export declare class Task extends Message<Task> {
  /**
   * Unique identifier for the task
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Title of the task
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * Description of the task
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: cloud.fullstack.v1.Task.Status status = 4;
   */
  status: Task_Status;

  constructor(data?: PartialMessage<Task>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cloud.fullstack.v1.Task";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Task;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Task;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Task;

  static equals(a: Task | PlainMessage<Task> | undefined, b: Task | PlainMessage<Task> | undefined): boolean;
}

/**
 * Status of the task (e.g., "To Do," "In Progress," "Done")
 *
 * @generated from enum cloud.fullstack.v1.Task.Status
 */
export declare enum Task_Status {
  /**
   * @generated from enum value: TODO = 0;
   */
  TODO = 0,

  /**
   * @generated from enum value: IN_PROGRESS = 1;
   */
  IN_PROGRESS = 1,

  /**
   * @generated from enum value: DONE = 2;
   */
  DONE = 2,
}

/**
 * Request message for creating a new task
 *
 * @generated from message cloud.fullstack.v1.CreateTaskRequest
 */
export declare class CreateTaskRequest extends Message<CreateTaskRequest> {
  /**
   * Title of the task
   *
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * Description of the task
   *
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * Status of the task (e.g., "To Do," "In Progress," "Done")
   *
   * @generated from field: cloud.fullstack.v1.Task.Status status = 3;
   */
  status: Task_Status;

  constructor(data?: PartialMessage<CreateTaskRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cloud.fullstack.v1.CreateTaskRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateTaskRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateTaskRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateTaskRequest;

  static equals(a: CreateTaskRequest | PlainMessage<CreateTaskRequest> | undefined, b: CreateTaskRequest | PlainMessage<CreateTaskRequest> | undefined): boolean;
}

/**
 * Request message for updating an existing task
 *
 * @generated from message cloud.fullstack.v1.UpdateTaskRequest
 */
export declare class UpdateTaskRequest extends Message<UpdateTaskRequest> {
  /**
   * Unique identifier of the task to update
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Title of the task
   *
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * Description of the task
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * Updated status of the task (e.g., "To Do," "In Progress," "Done")
   *
   * @generated from field: cloud.fullstack.v1.Task.Status status = 4;
   */
  status: Task_Status;

  constructor(data?: PartialMessage<UpdateTaskRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cloud.fullstack.v1.UpdateTaskRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateTaskRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateTaskRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateTaskRequest;

  static equals(a: UpdateTaskRequest | PlainMessage<UpdateTaskRequest> | undefined, b: UpdateTaskRequest | PlainMessage<UpdateTaskRequest> | undefined): boolean;
}

/**
 * Request message for deleting a task
 *
 * @generated from message cloud.fullstack.v1.DeleteTaskRequest
 */
export declare class DeleteTaskRequest extends Message<DeleteTaskRequest> {
  /**
   * Unique identifier of the task to delete
   *
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<DeleteTaskRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cloud.fullstack.v1.DeleteTaskRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteTaskRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteTaskRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteTaskRequest;

  static equals(a: DeleteTaskRequest | PlainMessage<DeleteTaskRequest> | undefined, b: DeleteTaskRequest | PlainMessage<DeleteTaskRequest> | undefined): boolean;
}

/**
 * Response message for a successful operation
 *
 * @generated from message cloud.fullstack.v1.SuccessResponse
 */
export declare class SuccessResponse extends Message<SuccessResponse> {
  /**
   * Success message
   *
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: string error = 2;
   */
  error: string;

  constructor(data?: PartialMessage<SuccessResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cloud.fullstack.v1.SuccessResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SuccessResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SuccessResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SuccessResponse;

  static equals(a: SuccessResponse | PlainMessage<SuccessResponse> | undefined, b: SuccessResponse | PlainMessage<SuccessResponse> | undefined): boolean;
}

/**
 * Request message for fetching tasks
 *
 * @generated from message cloud.fullstack.v1.GetTasksRequest
 */
export declare class GetTasksRequest extends Message<GetTasksRequest> {
  /**
   * @generated from field: int64 page = 1;
   */
  page: bigint;

  /**
   * @generated from field: int64 pageSize = 2;
   */
  pageSize: bigint;

  constructor(data?: PartialMessage<GetTasksRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cloud.fullstack.v1.GetTasksRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTasksRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTasksRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTasksRequest;

  static equals(a: GetTasksRequest | PlainMessage<GetTasksRequest> | undefined, b: GetTasksRequest | PlainMessage<GetTasksRequest> | undefined): boolean;
}

/**
 * Response message containing a list of tasks
 *
 * @generated from message cloud.fullstack.v1.GetTasksResponse
 */
export declare class GetTasksResponse extends Message<GetTasksResponse> {
  /**
   * List of tasks
   *
   * @generated from field: repeated cloud.fullstack.v1.Task tasks = 1;
   */
  tasks: Task[];

  constructor(data?: PartialMessage<GetTasksResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cloud.fullstack.v1.GetTasksResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTasksResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTasksResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTasksResponse;

  static equals(a: GetTasksResponse | PlainMessage<GetTasksResponse> | undefined, b: GetTasksResponse | PlainMessage<GetTasksResponse> | undefined): boolean;
}

